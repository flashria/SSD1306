 
/*
 * SSD1306.S
 *
 * Created: 2015/5/15 18:21:23
 *  Author: Administrator
 */ 
#include <avr/pgmspace.h>
#include <util/delay.h>
#include <stdlib.h>

#include "SSD1306.h"
 
 

 //-------------  ASCII字符库----------------------------------------------------------------
 //说明：该字库为5*7点阵字符字模库，但字库格式为8*8点阵字模数据，第8行为行间距，
 //      第6-8列为字间距。可以使用6*8点阵、7*8点阵、8*8点阵形式的字符显示
 const unsigned short ASCII6_8[][8] PROGMEM ={
	 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,    /*" "=00H 0x20*/
	 0x00,0x00,0x00,0x4F,0x00,0x00,0x00,0x00,    /*"!"=01H*/
	 0x00,0x00,0x07,0x00,0x07,0x00,0x00,0x00,    /*"""=02h*/
	 0x00,0x14,0x7F,0x14,0x7F,0x14,0x00,0x00,    /*"#"=03h*/
	 0x00,0x24,0x2A,0x7F,0x2A,0x12,0x00,0x00,    /*"$"=04h*/
	 0x00,0x23,0x13,0x08,0x64,0x62,0x00,0x00,    /*"%"=05h*/
	 0x00,0x36,0x49,0x55,0x22,0x50,0x00,0x00,    /*"&"=06h*/
	 0x00,0x00,0x05,0x03,0x00,0x00,0x00,0x00,    /*"'"=07h*/
	 0x00,0x00,0x1C,0x22,0x41,0x00,0x00,0x00,    /*"("=08h*/
	 0x00,0x00,0x41,0x22,0x1C,0x00,0x00,0x00,    /*")"=09h*/
	 0x00,0x14,0x08,0x3E,0x08,0x14,0x00,0x00,    /*"*"=0Ah*/
	 0x00,0x08,0x08,0x3E,0x08,0x08,0x00,0x00,    /*"+"=0Bh*/
	 0x00,0x00,0x50,0x30,0x00,0x00,0x00,0x00,    /*";"=0Ch*/
	 0x00,0x08,0x08,0x08,0x08,0x08,0x00,0x00,    /*"-"=0Dh*/
	 0x00,0x00,0x60,0x60,0x00,0x00,0x00,0x00,    /*"."=0Eh*/
	 0x00,0x20,0x10,0x08,0x04,0x02,0x00,0x00,    /*"/"=0Fh*/
	 0x00,0x3E,0x51,0x49,0x45,0x3E,0x00,0x00,    /*"0"=10h*/
	 0x00,0x00,0x42,0x7F,0x40,0x00,0x00,0x00,    /*"1"=11h*/
	 0x00,0x42,0x61,0x51,0x49,0x46,0x00,0x00,    /*"2"=12h*/
	 0x00,0x21,0x41,0x45,0x4B,0x31,0x00,0x00,    /*"3"=13h*/
	 0x00,0x18,0x14,0x12,0x7F,0x10,0x00,0x00,    /*"4"=14h*/
	 0x00,0x27,0x45,0x45,0x45,0x39,0x00,0x00,    /*"5"=15h*/
	 0x00,0x3C,0x4A,0x49,0x49,0x30,0x00,0x00,    /*"6"=16h*/
	 0x00,0x01,0x01,0x79,0x05,0x03,0x00,0x00,    /*"7"=17h*/
	 0x00,0x36,0x49,0x49,0x49,0x36,0x00,0x00,    /*"8"=18h*/
	 0x00,0x06,0x49,0x49,0x29,0x1E,0x00,0x00,    /*"9"=19h*/
	 0x00,0x00,0x36,0x36,0x00,0x00,0x00,0x00,    /*":"=1Ah*/
	 0x00,0x00,0x56,0x36,0x00,0x00,0x00,0x00,    /*";"=1Bh*/
	 0x00,0x08,0x14,0x22,0x41,0x00,0x00,0x00,    /*"<"=1Ch*/
	 0x00,0x14,0x14,0x14,0x14,0x14,0x00,0x00,    /*"="=1Dh*/
	 0x00,0x00,0x41,0x22,0x14,0x08,0x00,0x00,    /*">"=1Eh*/
	 0x00,0x02,0x01,0x51,0x09,0x06,0x00,0x00,    /*"?"=1Fh*/
	 0x00,0x32,0x49,0x79,0x41,0x3E,0x00,0x00,    /*"@"=20h*/
	 0x00,0x7E,0x11,0x11,0x11,0x7E,0x00,0x00,    /*"A"=21h*/
	 0x00,0x41,0x7F,0x49,0x49,0x36,0x00,0x00,    /*"B"=22h*/
	 0x00,0x3E,0x41,0x41,0x41,0x22,0x00,0x00,    /*"C"=23h*/
	 0x00,0x41,0x7F,0x41,0x41,0x3E,0x00,0x00,    /*"D"=24h*/
	 0x00,0x7F,0x49,0x49,0x49,0x49,0x00,0x00,    /*"E"=25h*/
	 0x00,0x7F,0x09,0x09,0x09,0x01,0x00,0x00,    /*"F"=26h*/
	 0x00,0x3E,0x41,0x41,0x49,0x7A,0x00,0x00,    /*"G"=27h*/
	 0x00,0x7F,0x08,0x08,0x08,0x7F,0x00,0x00,    /*"h"=28h*/
	 0x00,0x00,0x41,0x7F,0x41,0x00,0x00,0x00,    /*"I"=29h*/
	 0x00,0x20,0x40,0x41,0x3F,0x01,0x00,0x00,    /*"J"=2Ah*/
	 0x00,0x7F,0x08,0x14,0x22,0x41,0x00,0x00,    /*"K"=2Bh*/
	 0x00,0x7F,0x40,0x40,0x40,0x40,0x00,0x00,    /*"L"=2Ch*/
	 0x00,0x7F,0x02,0x0C,0x02,0x7F,0x00,0x00,    /*"M"=2Dh*/
	 0x00,0x7F,0x06,0x08,0x30,0x7F,0x00,0x00,    /*"N"=2Eh*/
	 0x00,0x3E,0x41,0x41,0x41,0x3E,0x00,0x00,    /*"O"=2Fh*/
	 0x00,0x7F,0x09,0x09,0x09,0x06,0x00,0x00,    /*"P"=30h*/
	 0x00,0x3E,0x41,0x51,0x21,0x5E,0x00,0x00,    /*"Q"=31h*/
	 0x00,0x7F,0x09,0x19,0x29,0x46,0x00,0x00,    /*"R"=32h*/
	 0x00,0x26,0x49,0x49,0x49,0x32,0x00,0x00,    /*"S"=33h*/
	 0x00,0x01,0x01,0x7F,0x01,0x01,0x00,0x00,    /*"T"=34h*/
	 0x00,0x3F,0x40,0x40,0x40,0x3F,0x00,0x00,    /*"U"=35h*/
	 0x00,0x1F,0x20,0x40,0x20,0x1F,0x00,0x00,    /*"V"=36h*/
	 0x00,0x7F,0x20,0x18,0x20,0x7F,0x00,0x00,    /*"W"=37h*/
	 0x00,0x63,0x14,0x08,0x14,0x63,0x00,0x00,    /*"X"=38h*/
	 0x00,0x07,0x08,0x70,0x08,0x07,0x00,0x00,    /*"Y"=39h*/
	 0x00,0x61,0x51,0x49,0x45,0x43,0x00,0x00,    /*"Z"=3Ah*/
	 0x00,0x00,0x7F,0x41,0x41,0x00,0x00,0x00,    /*"["=3Bh*/
	 0x00,0x02,0x04,0x08,0x10,0x20,0x00,0x00,    /*"\"=3Ch*/
	 0x00,0x00,0x41,0x41,0x7F,0x00,0x00,0x00,    /*"]"=3Dh*/
	 0x00,0x04,0x02,0x01,0x02,0x04,0x00,0x00,    /*"^"=3Eh*/
	 0x00,0x40,0x40,0x40,0x40,0x40,0x00,0x00,    /*"_"=3Fh*/
	 0x00,0x01,0x02,0x04,0x00,0x00,0x00,0x00,    /*"`"=40h*/
	 0x00,0x20,0x54,0x54,0x54,0x78,0x00,0x00,    /*"a"=41h*/
	 0x00,0x7F,0x48,0x44,0x44,0x38,0x00,0x00,    /*"b"=42h*/
	 0x00,0x38,0x44,0x44,0x44,0x28,0x00,0x00,    /*"c"=43h*/
	 0x00,0x38,0x44,0x44,0x48,0x7F,0x00,0x00,    /*"d"=44h*/
	 0x00,0x38,0x54,0x54,0x54,0x18,0x00,0x00,    /*"e"=45h*/
	 0x00,0x00,0x08,0x7E,0x09,0x02,0x00,0x00,    /*"f"=46h*/
	 0x00,0x0C,0x52,0x52,0x4C,0x3E,0x00,0x00,    /*"g"=47h*/
	 0x00,0x7F,0x08,0x04,0x04,0x78,0x00,0x00,    /*"h"=48h*/
	 0x00,0x00,0x44,0x7D,0x40,0x00,0x00,0x00,    /*"i"=49h*/
	 0x00,0x20,0x40,0x44,0x3D,0x00,0x00,0x00,    /*"j"=4Ah*/
	 0x00,0x00,0x7F,0x10,0x28,0x44,0x00,0x00,    /*"k"=4Bh*/
	 0x00,0x00,0x41,0x7F,0x40,0x00,0x00,0x00,    /*"l"=4Ch*/
	 0x00,0x7C,0x04,0x78,0x04,0x78,0x00,0x00,    /*"m"=4Dh*/
	 0x00,0x7C,0x08,0x04,0x04,0x78,0x00,0x00,    /*"n"=4Eh*/
	 0x00,0x38,0x44,0x44,0x44,0x38,0x00,0x00,    /*"o'=4Fh*/
	 0x00,0x7E,0x0C,0x12,0x12,0x0C,0x00,0x00,    /*"p"=50h*/
	 0x00,0x0C,0x12,0x12,0x0C,0x7E,0x00,0x00,    /*"q"=51h*/
	 0x00,0x7C,0x08,0x04,0x04,0x08,0x00,0x00,    /*"r"=52h*/
	 0x00,0x58,0x54,0x54,0x54,0x64,0x00,0x00,    /*"s"=53h*/
	 0x00,0x04,0x3F,0x44,0x40,0x20,0x00,0x00,    /*"t"=54h*/
	 0x00,0x3C,0x40,0x40,0x3C,0x40,0x00,0x00,    /*"u"=55h*/
	 0x00,0x1C,0x20,0x40,0x20,0x1C,0x00,0x00,    /*"v"=56h*/
	 0x00,0x3C,0x40,0x30,0x40,0x3C,0x00,0x00,    /*"w"=57h*/
	 0x00,0x44,0x28,0x10,0x28,0x44,0x00,0x00,    /*"x"=58h*/
	 0x00,0x1C,0xA0,0xA0,0x90,0x7C,0x00,0x00,    /*"y"=59h*/
	 0x00,0x44,0x64,0x54,0x4C,0x44,0x00,0x00,    /*"z"=5Ah*/
	 0x00,0x00,0x08,0x36,0x41,0x00,0x00,0x00,    /*"{"=5Bh*/
		 0x00,0x00,0x00,0x77,0x00,0x00,0x00,0x00,    /*"|"=5Ch*/
		 0x00,0x00,0x41,0x36,0x08,0x00,0x00,0x00,    /*"}"=5Dh*/
		 0x00,0x02,0x01,0x02,0x04,0x02,0x00,0x00,    /*"~"=5Fh*/
		 0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00     /*" "=0x60*/
	 };



void SSD1306::SSD1306_command(uint8_t c) {
	digitalWrite(cs, HIGH);
	digitalWrite(dc, LOW);
	digitalWrite(cs, LOW);
	spiwrite(c);
	digitalWrite(cs, HIGH);
}

void SSD1306::SSD1306_data(uint8_t c) {
	digitalWrite(cs, HIGH);
	digitalWrite(dc, HIGH);
	digitalWrite(cs, LOW);
	spiwrite(c);
	digitalWrite(cs, HIGH);
}
inline void SSD1306::spiwrite(uint8_t c) {
	shiftOut(sid, sclk, MSBFIRST, c);

}
void SSD1306::SSD1306_init() {
	// set pin directions
	pinMode(sid, OUTPUT);
	pinMode(sclk, OUTPUT);
	pinMode(dc, OUTPUT);
	pinMode(rst, OUTPUT);
	pinMode(cs, OUTPUT);

	digitalWrite(rst, HIGH);
	// VDD (3.3V) goes high at start, lets just chill for a ms
	delay(1);
	// bring0xset low
	digitalWrite(rst, LOW);
	// wait 10ms
	delay(10);
	// bring out of reset
	digitalWrite(rst, HIGH);

 
	
	  SSD1306_command (0xAE);  // 1.Set Display Off
                  
      SSD1306_command (0xD5); // 2.Set display Clock Divide Ratio/Oscillator Frequency
                  SSD1306_command (0x80);
                  
                  SSD1306_command (0xA8); // 3.Set Multiplex Ratio
                  SSD1306_command (0x3F);
                  
                  SSD1306_command (0xD3); // 4.Set Display Offset
                  SSD1306_command (0x00);
                  
                  SSD1306_command (0x40); // 5.Set Display Start Line

                  SSD1306_command (0x20);
                  SSD1306_command (0x10); //0x00
                  
                  SSD1306_command (0xA1); // 6.Set Segment Re-Map
                  
                  SSD1306_command (0xC8); // 7.Set COM Output Scan Direction
                  
                  SSD1306_command (0xDA); // 8.Set COM Pins Hardware Configurartion
                  SSD1306_command (0x12);
                  
                  SSD1306_command (0x81); // 9.Set Contrast Control   0x66
                  SSD1306_command (0x66); // 0xCF
                  
                  SSD1306_command (0xD9); // 10.Set Pre-Charge Period
                  SSD1306_command (0xF1);
                  
                  SSD1306_command (0xDB); // 11.Set VCOMH Deselect Level  0x30
                  SSD1306_command (0x30); // 0x40
                  
                  SSD1306_command (0xA4); // 12.Set Entire Display On/Off
                  
                  SSD1306_command (0xA6); // 13.Set Normal/Inverse Display
                  
                  SSD1306_command (0x8D);// 14.Set Charge Pump
                  SSD1306_command (0x14);
                  
                  SSD1306_command (0xAF); // 15.Set Display On
}


// clear everything
void SSD1306::clear(void) {
	//SSD1306_command (0xAE);
	 unsigned char j,i;
	 for(j=0;j<8;j++)
	 {
		 SSD1306_command(j|0xB0); //页地址设置
		 SSD1306_command(0x00);	   //列地址0
		 SSD1306_command(0x10);
		 
		 for(i=0;i<132;i++)
		 {
			 SSD1306_data(0);
		 }
	 }
	// SSD1306_command (0xAF);
}

void SSD1306::clear_display(void) {
	clear();
	display();
}
void SSD1306::invert(uint8_t i) {
	if (i) {
		SSD1306_command(Set_Invert);
		} else {
		SSD1306_command(Clr_Invert);
	}
}
void SSD1306::hide(void) {
	SSD1306_command(0xAE);//显示开启
}
void SSD1306::display(void) {
	SSD1306_command(0xAF);//显示开启
}


void SSD1306::drawstring(uint8_t x, uint8_t line, char *c) {
	WR_ADD(x,line);
	while (c[0] != 0) {
		drawchar( c[0]);
		c++;
	}

}

void  SSD1306::drawchar(uint8_t c) {
	
	unsigned char i,dat;
	for(i=0;i<6;i++)
	{
		dat=pgm_read_byte(&ASCII6_8[c-0x20][i]);
		SSD1306_data(dat);
	}
}



 //----------写字符地址----页--位
 void SSD1306::WR_ADD(uint8_t ye,uint8_t wei)
 {
	 SSD1306_command(ye|0xb0);//第x页(0-7)
	 wei*=6;
	 SSD1306_command(wei&0x0f); //字符位置地址L
	 wei=wei>>4;
	 SSD1306_command(wei|0x10); //字符位置地址H
 }
 

